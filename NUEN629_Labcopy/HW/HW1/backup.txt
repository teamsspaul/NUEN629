    %If we have a sloped line
    if(Lines(j,5)~=0 && Vector(1,5)~=0 && Lines(j,3)~=Vector(1,3))
       x2=(Lines(j,3)*Lines(j,2)-Vector(1,3)*Vector(1,2)+Vector(1,1)-Lines(j,1))/(Lines(j,3)-Vector(1,3));
       y2=Vector(1,3)*(x2-Vector(1,2))+Vector(1,1);
       %Make sure going in the right direction
       %if (Vector(1,5)*(x2-Vector(1,2))+Vector(1,4)*(y2-Vector(1,1))>0)
       %%Dot Product is unchecked
       %If distance is decreased we are going in the right direction
       if (((Vector(1,2)+Vector(1,5)-x2)^2+(Vector(1,1)+Vector(1,4)-y2)^2)<((Vector(1,2)-x2)^2+(Vector(1,1)-y2)^2))
           %If this distance is smaller then we will hit this location
           %first
           if (((x2-Vector(1,2))^2+(y2-Vector(1,1))^2)^0.5<s)
              s=((x2-Vector(1,2))^2+(y2-Vector(1,1))^2)^0.5;
              %Get normal vectors to the line we intersected
              XN=-1*Lines(j,4);
              YN=Lines(j,5);
              %Make sure our normal is going in the right direction
              d1=((x2+XN)^2+(y2+YN)^2)^0.5;
              d2=((x2-XN)^2+(y2-YN)^2)^0.5;
              if (d2<d1) 
                  XN=-XN;
                  YN=-YN;
              end
              xt=x2+XN*Pitch;
              yt=y2+YN*Pitch;
              x22=x2;
              y22=y2;
           end
       end
    end
    %Other Line Cases
    if(Lines(j,5)~=0 && Vector(1,5)==0)
       x2=Vector(1,2);
       y2=Lines(j,3)*(x2-Lines(j,2))+Lines(j,1);
       %Make sure going in the right direction
       %if (Vector(1,5)*(x2-Vector(1,2))+Vector(1,4)*(y2-Vector(1,1))>0)
       %%Dot Product is unchecked
       %If distance is decreased we are going in the right direction
       if (((Vector(1,2)+Vector(1,5)-x2)^2+(Vector(1,1)+Vector(1,4)-y2)^2)<((Vector(1,2)-x2)^2+(Vector(1,1)-y2)^2))
           %If this distance is smaller then we will hit this location
           %first
           if (((x2-Vector(1,2))^2+(y2-Vector(1,1))^2)^0.5<s)
              s=((x2-Vector(1,2))^2+(y2-Vector(1,1))^2)^0.5;
              %Get normal vectors to the line we intersected
              XN=-1*Lines(j,4);
              YN=Lines(j,5);
              %Make sure our normal is going in the right direction
              d1=((x2+XN)^2+(y2+YN)^2)^0.5;
              d2=((x2-XN)^2+(y2-YN)^2)^0.5;
              if (d2<d1) 
                  XN=-XN;
                  YN=-YN;
              end
              xt=x2+XN*Pitch;
              yt=y2+YN*Pitch;
              x22=x2;
              y22=y2;
           end
       end
    end
    %Other Line Cases
    if(Lines(j,5)==0 && Vector(1,5)~=0)
       x2=Lines(j,2);
       y2=Vector(1,3)*(x2-Vector(1,2))+Vector(1,1);
       %Make sure going in the right direction
       %if (Vector(1,5)*(x2-Vector(1,2))+Vector(1,4)*(y2-Vector(1,1))>0)
       %%Dot Product is unchecked
       %If distance is decreased we are going in the right direction
       if (((Vector(1,2)+Vector(1,5)-x2)^2+(Vector(1,1)+Vector(1,4)-y2)^2)<((Vector(1,2)-x2)^2+(Vector(1,1)-y2)^2))
           %If this distance is smaller then we will hit this location
           %first
           if (((x2-Vector(1,2))^2+(y2-Vector(1,1))^2)^0.5<s)
              s=((x2-Vector(1,2))^2+(y2-Vector(1,1))^2)^0.5;
              %Get normal vectors to the line we intersected
              XN=-1*Lines(j,4);
              YN=Lines(j,5);
              %Make sure our normal is going in the right direction
              d1=((x2+XN)^2+(y2+YN)^2)^0.5;
              d2=((x2-XN)^2+(y2-YN)^2)^0.5;
              if (d2<d1) 
                  XN=-XN;
                  YN=-YN;
              end
              xt=x2+XN*Pitch;
              yt=y2+YN*Pitch;
              x22=x2;
              y22=y2;
           end
       end
    end  